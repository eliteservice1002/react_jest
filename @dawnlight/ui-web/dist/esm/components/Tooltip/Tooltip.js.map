{"version":3,"sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"names":["React","useRef","useState","usePopper","Tooltip","title","children","anchorEl","setAnchorEl","popperEl","setPopperEl","arrowEl","setArrowEl","isVisible","setIsVisible","styles","attributes","modifiers","name","options","element","leaveTimer","handleMouseOver","clearTimeout","current","handleMouseLeave","setTimeout","handleFocus","handleBlur","Children","map","child","isValidElement","cloneElement","ref","onMouseOver","onMouseLeave","onFocus","onBlur","popper","arrow"],"mappings":";;AAAA,OAAOA,KAAP,IAAsDC,MAAtD,EAA8DC,QAA9D,QAA8E,OAA9E;AACA,SAASC,SAAT,QAA0B,cAA1B;AAMA,OAAO,IAAMC,OAA+B,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACtE,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyBb,SAAS,CAACI,QAAD,EAAWE,QAAX,EAAqB;AAC3DQ,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAET;AAAX;AAA1B,KAAD;AADgD,GAArB,CAAxC;AAIA,MAAMU,UAAU,GAAGpB,MAAM,CAAC,IAAD,CAAzB;;AAEA,MAAMqB,eAAkC,GAAG,MAAM;AAC/CC,IAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,MAAMW,gBAAmC,GAAG,MAAM;AAChDF,IAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;AACAH,IAAAA,UAAU,CAACG,OAAX,GAAqBE,UAAU,CAAC,MAAM;AACpCZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAF8B,EAE5B,GAF4B,CAA/B;AAGD,GALD;;AAOA,MAAMa,WAA8B,GAAG,MAAM;AAC3CJ,IAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,MAAMc,UAA6B,GAAG,MAAM;AAC1CL,IAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;AACAV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,sBACE,0CACGd,KAAK,CAAC6B,QAAN,CAAeC,GAAf,CAAmBxB,QAAnB,EAA8ByB,KAAD,IAAW;AACvC,sBAAI/B,KAAK,CAACgC,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;AAC/B,0BAAO/B,KAAK,CAACiC,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,GAAG,EAAE1B,WAD0B;AAE/B2B,QAAAA,WAAW,EAAEb,eAFkB;AAG/Bc,QAAAA,YAAY,EAAEX,gBAHiB;AAI/BY,QAAAA,OAAO,EAAEV,WAJsB;AAK/BW,QAAAA,MAAM,EAAEV;AALuB,OAA1B,CAAP;AAOD;;AACD,WAAOG,KAAP;AACD,GAXA,CADH,EAaGlB,SAAS,iBACR;AACE,IAAA,SAAS,EAAC,2CADZ;AAEE,IAAA,GAAG,EAAEH,WAFP;AAGE,IAAA,KAAK,EAAEK,MAAM,CAACwB;AAHhB,KAIMvB,UAAU,CAACuB,MAJjB;AAKE,IAAA,WAAW,EAAEjB,eALf;AAME,IAAA,YAAY,EAAEG,gBANhB;AAOE,IAAA,OAAO,EAAEE,WAPX;AAQE,IAAA,MAAM,EAAEC;AARV,MAUGvB,KAVH,eAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEO,UAAjC;AAA6C,IAAA,KAAK,EAAEG,MAAM,CAACyB;AAA3D,IAXF,CAdJ,CADF;AA+BD,CAjEM","sourcesContent":["import React, { FocusEventHandler, MouseEventHandler, useRef, useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nexport interface TooltipProps {\n  readonly title: string;\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({ title, children }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [popperEl, setPopperEl] = useState(null);\n  const [arrowEl, setArrowEl] = useState(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const { styles, attributes } = usePopper(anchorEl, popperEl, {\n    modifiers: [{ name: 'arrow', options: { element: arrowEl } }],\n  });\n\n  const leaveTimer = useRef(null);\n\n  const handleMouseOver: MouseEventHandler = () => {\n    clearTimeout(leaveTimer.current);\n    setIsVisible(true);\n  };\n\n  const handleMouseLeave: MouseEventHandler = () => {\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      setIsVisible(false);\n    }, 800);\n  };\n\n  const handleFocus: FocusEventHandler = () => {\n    clearTimeout(leaveTimer.current);\n    setIsVisible(true);\n  };\n\n  const handleBlur: FocusEventHandler = () => {\n    clearTimeout(leaveTimer.current);\n    setIsVisible(false);\n  };\n\n  return (\n    <>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            ref: setAnchorEl,\n            onMouseOver: handleMouseOver,\n            onMouseLeave: handleMouseLeave,\n            onFocus: handleFocus,\n            onBlur: handleBlur,\n          });\n        }\n        return child;\n      })}\n      {isVisible && (\n        <div\n          className=\"bg-overlay text-body1 text-xs rounded p-2\"\n          ref={setPopperEl}\n          style={styles.popper}\n          {...attributes.popper}\n          onMouseOver={handleMouseOver}\n          onMouseLeave={handleMouseLeave}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        >\n          {title}\n          <div className=\"bg-overlay\" ref={setArrowEl} style={styles.arrow} />\n        </div>\n      )}\n    </>\n  );\n};\n"],"file":"Tooltip.js"}