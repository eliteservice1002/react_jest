{"version":3,"sources":["../../../../src/components/IconButton/IconButton.tsx"],"names":["IconButton","React","forwardRef","ref","label","variant","className","children","props","visuallyHidden","iconButtonStyles","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAOO,IAAMA,UAAqC,gBAAGC,kBAAMC,UAAN,CAGnD,gBAA6DC,GAA7D,EAAqE;AAAA,MAAlEC,KAAkE,QAAlEA,KAAkE;AAAA,0BAA3DC,OAA2D;AAAA,MAA3DA,OAA2D,6BAAjD,MAAiD;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAAjBC,KAAiB;;AACrE,MAAMC,cAAc,gBAAG;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAmCL,KAAnC,CAAvB;;AACA,SAAOC,OAAO,KAAK,QAAZ,gBACL;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAE,4BAAWK,8BAAX,EAA6BJ,SAA7B,CAAjC;AAA0E,IAAA,GAAG,EAAEH;AAA/E,KAAwFK,KAAxF,GACGD,QADH,EAEGE,cAFH,CADK,gBAML;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEH,SAAjC;AAA4C,IAAA,GAAG,EAAEH;AAAjD,KAA0DK,KAA1D,GACGD,QADH,EAEGE,cAFH,CANF;AAWD,CAhBoD,CAA9C;;;AAkBPT,UAAU,CAACW,WAAX,GAAyB,YAAzB","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { iconButtonStyles } from '../../styles/common-styles';\n\nexport interface IconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  readonly variant?: 'filled' | 'bare';\n  readonly label: string;\n}\n\nexport const IconButton: React.FC<IconButtonProps> = React.forwardRef<\n  HTMLButtonElement,\n  IconButtonProps\n>(({ label, variant = 'bare', className, children, ...props }, ref) => {\n  const visuallyHidden = <span className=\"visually-hidden\">{label}</span>;\n  return variant === 'filled' ? (\n    <button type=\"button\" className={classNames(iconButtonStyles, className)} ref={ref} {...props}>\n      {children}\n      {visuallyHidden}\n    </button>\n  ) : (\n    <button type=\"button\" className={className} ref={ref} {...props}>\n      {children}\n      {visuallyHidden}\n    </button>\n  );\n});\n\nIconButton.displayName = 'IconButton';\n"],"file":"IconButton.js"}