{"version":3,"sources":["../../../../src/components/Select/SelectOption.tsx"],"names":["SelectOption","className","children","props","Fragment","active","selected"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAQO,IAAMA,YAAyC,GAAG,SAA5CA,YAA4C;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,QAAd,QAAcA,QAAd;AAAA,MAA2BC,KAA3B;;AAAA,sBACvD,gCAAC,eAAD,CAAS,MAAT,eAAoBA,KAApB;AAA2B,IAAA,EAAE,EAAEC;AAA/B,MACG;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,QAAWC,QAAX,SAAWA,QAAX;AAAA,wBACC;AACE,MAAA,SAAS,EAAE,4BACT,KADS,EAET;AACE,gCAAwBD,MAAM,KAAK,IADrC;AAEE,kDAA0CA,MAAM,KAAK;AAFvD,OAFS,EAMTJ,SANS;AADb,OAUGK,QAAQ,iBAAI,gCAAC,gBAAD,OAVf,EAWGJ,QAXH,CADD;AAAA,GADH,CADuD;AAAA,CAAlD","sourcesContent":["import React, { Fragment } from 'react';\nimport { Listbox } from '@headlessui/react';\nimport { CheckIcon } from '../../icons';\nimport classNames from 'classnames';\n\nexport interface SelectOptionProps extends React.HTMLAttributes<HTMLLIElement> {\n  readonly value: string;\n  readonly as?: React.ElementType;\n  readonly disabled?: boolean;\n}\n\nexport const SelectOption: React.FC<SelectOptionProps> = ({ className, children, ...props }) => (\n  <Listbox.Option {...props} as={Fragment}>\n    {({ active, selected }) => (\n      <li\n        className={classNames(\n          'p-3',\n          {\n            'bg-accent text-body1': active === true,\n            'bg-inverseBackground text-inverseBody1': active === false,\n          },\n          className\n        )}\n      >\n        {selected && <CheckIcon />}\n        {children}\n      </li>\n    )}\n  </Listbox.Option>\n);\n"],"file":"SelectOption.js"}