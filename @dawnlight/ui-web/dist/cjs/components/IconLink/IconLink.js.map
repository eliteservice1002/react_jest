{"version":3,"sources":["../../../../src/components/IconLink/IconLink.tsx"],"names":["IconLink","React","forwardRef","ref","label","className","children","props","iconButtonStyles","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAMO,IAAMA,QAAiC,gBAAGC,kBAAMC,UAAN,CAC/C,gBAA2CC,GAA3C;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,SAAV,QAAUA,SAAV;AAAA,MAAqBC,QAArB,QAAqBA,QAArB;AAAA,MAAkCC,KAAlC;;AAAA,sBACE;AAAG,IAAA,SAAS,EAAE,4BAAWC,8BAAX,EAA6BH,SAA7B,CAAd;AAAuD,IAAA,GAAG,EAAEF;AAA5D,KAAqEI,KAArE,GACGD,QADH,eAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAmCF,KAAnC,CAFF,CADF;AAAA,CAD+C,CAA1C;;;AASPJ,QAAQ,CAACS,WAAT,GAAuB,UAAvB","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { iconButtonStyles } from '../../styles/common-styles';\n\nexport interface IconLinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  readonly label: string;\n}\n\nexport const IconLink: React.FC<IconLinkProps> = React.forwardRef<HTMLAnchorElement, IconLinkProps>(\n  ({ label, className, children, ...props }, ref) => (\n    <a className={classNames(iconButtonStyles, className)} ref={ref} {...props}>\n      {children}\n      <span className=\"visually-hidden\">{label}</span>\n    </a>\n  )\n);\n\nIconLink.displayName = 'IconLink';\n"],"file":"IconLink.js"}