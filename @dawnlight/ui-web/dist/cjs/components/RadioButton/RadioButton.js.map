{"version":3,"sources":["../../../../src/components/RadioButton/RadioButton.tsx"],"names":["RadioButton","name","value","checked","className","props","isFocused","setIsFocused","handleFocus","e","type","ring"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AAQO,IAAMA,WAAuC,GAAG,SAA1CA,WAA0C,OAMjD;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,kBAAkC,qBAAS,KAAT,CAAlC;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,WAAgD,GAAG,SAAnDA,WAAmD,CAACC,CAAD,EAAO;AAC9D,QAAIA,CAAC,CAACC,IAAF,KAAW,OAAf,EAAwB;AACtBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGJ,OAAO,gBACN,gCAAC,mBAAD;AAAc,IAAA,SAAS,EAAE,4BAAW,0BAAX,EAAuC;AAAEQ,MAAAA,IAAI,EAAEL;AAAR,KAAvC;AAAzB,IADM,gBAGN,gCAAC,qBAAD;AAAgB,IAAA,SAAS,EAAE,4BAAW,yBAAX,EAAsC;AAAEK,MAAAA,IAAI,EAAEL;AAAR,KAAtC;AAA3B,IAJJ,eAME;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEL,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,SAAS,EAAE,4BAAW,iCAAX,EAA8CC,SAA9C,CALb;AAME,IAAA,OAAO,EAAEI,WANX;AAOE,IAAA,MAAM,EAAEA;AAPV,KAQMH,KARN,EANF,CADF;AAmBD,CAnCM","sourcesContent":["import classNames from 'classnames';\nimport React, { FocusEventHandler, useState } from 'react';\nimport { RadioChecked, RadioUnchecked } from '../../icons';\n\nexport interface RadioButtonProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  readonly name: string;\n  readonly value: string;\n  readonly checked: boolean;\n}\n\nexport const RadioButton: React.FC<RadioButtonProps> = ({\n  name,\n  value,\n  checked,\n  className,\n  ...props\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleFocus: FocusEventHandler<HTMLInputElement> = (e) => {\n    if (e.type === 'focus') {\n      setIsFocused(true);\n    } else {\n      setIsFocused(false);\n    }\n  };\n  return (\n    <div className=\"relative\">\n      {checked ? (\n        <RadioChecked className={classNames('text-accent rounded-full', { ring: isFocused })} />\n      ) : (\n        <RadioUnchecked className={classNames('text-body2 rounded-full', { ring: isFocused })} />\n      )}\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        className={classNames('opacity-0 absolute top-0 left-0', className)}\n        onFocus={handleFocus}\n        onBlur={handleFocus}\n        {...props}\n      />\n    </div>\n  );\n};\n"],"file":"RadioButton.js"}